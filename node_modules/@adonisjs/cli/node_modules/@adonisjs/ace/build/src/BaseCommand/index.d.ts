import { ParsedOptions } from 'getopts';
import { Logger } from '@poppinss/fancy-logs';
import { Colors } from '@poppinss/colors';
import { Prompt, FakePrompt } from '@poppinss/prompts';
import { ApplicationContract } from '@ioc:Adonis/Core/Application';
import { Generator } from '../Generator';
import { CommandContract, CommandArg, CommandFlag } from '../Contracts';
export declare abstract class BaseCommand implements CommandContract {
    application: ApplicationContract;
    constructor(application: ApplicationContract);
    static args: CommandArg[];
    static flags: CommandFlag[];
    static commandName: string;
    static description: string;
    static settings: any;
    static $booted: boolean;
    static $boot(): void;
    static $defineArgument(options: Partial<CommandArg>): void;
    static $defineFlag(options: Partial<CommandFlag>): void;
    parsed?: ParsedOptions;
    prompt: Prompt | FakePrompt;
    logger: Logger;
    generator: Generator;
    get colors(): Colors;
    abstract handle(...args: any[]): Promise<void>;
}
