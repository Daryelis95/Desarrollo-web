/// <reference path="../adonis-typings/application.d.ts" />
import { IocContract } from '@adonisjs/fold';
import { PreloadNode, ApplicationContract, SemverNode, RcFile } from '@ioc:Adonis/Core/Application';
export declare class Application implements ApplicationContract {
    readonly appRoot: string;
    container: IocContract;
    isReady: boolean;
    readonly cliCwd?: string;
    isShuttingDown: boolean;
    inProduction: boolean;
    inDev: boolean;
    environment: 'web' | 'console' | 'test' | 'unknown';
    readonly appName: string;
    exceptionHandlerNamespace: string;
    preloads: PreloadNode[];
    directoriesMap: Map<(string), string>;
    autoloadsMap: Map<string, string>;
    namespacesMap: Map<string, string>;
    readonly version: SemverNode | null;
    readonly adonisVersion: SemverNode | null;
    readonly rcFile: RcFile;
    readonly typescript: boolean;
    constructor(appRoot: string, container: IocContract, rcContents: any, pkgFile: Partial<{
        name: string;
        version: string;
        adonisVersion: string;
    } & {
        [key: string]: any;
    }>);
    private _parseVersion;
    private _setEnvVars;
    makePath(...paths: string[]): string;
    makePathFromCwd(...paths: string[]): string;
    configPath(...paths: string[]): string;
    publicPath(...paths: string[]): string;
    databasePath(...paths: string[]): string;
    migrationsPath(...paths: string[]): string;
    seedsPath(...paths: string[]): string;
    resourcesPath(...paths: string[]): string;
    viewsPath(...paths: string[]): string;
    startPath(...paths: string[]): string;
    tmpPath(...paths: string[]): string;
}
