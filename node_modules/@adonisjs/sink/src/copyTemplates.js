"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const colors_1 = require("@poppinss/colors");
const path_1 = require("path");
const TemplateFile_1 = require("./formats/TemplateFile");
const logger_1 = require("./logger");
const colors = new colors_1.Colors();
function copyTemplates(projectRoot, application, templatesBasePath, templates) {
    Object.keys(templates).forEach((templateFor) => {
        if (templateFor === 'basePath') {
            return;
        }
        const configuredDirectory = application.directoriesMap.get(templateFor);
        if (!configuredDirectory) {
            logger_1.logger.error({
                message: `Unknown directory type ${colors.underline(templateFor)}`,
                icon: true,
            });
            return;
        }
        const templatesToCopy = Array.isArray(templates[templateFor])
            ? templates[templateFor]
            : [templates[templateFor]];
        templatesToCopy.forEach((templateToCopy) => {
            const src = typeof (templateToCopy) === 'string' ? templateToCopy : templateToCopy.src;
            let dest = typeof (templateToCopy) === 'string' ? templateToCopy : templateToCopy.dest;
            if (!src || !dest) {
                throw new Error('src and dest are required when copying templates');
            }
            const sourcePath = path_1.join(templatesBasePath, src);
            dest = dest.replace(new RegExp(`${path_1.extname(dest)}$`), '.ts');
            const destinationPath = path_1.normalize(`${configuredDirectory}/${dest}`);
            const template = new TemplateFile_1.TemplateFile(projectRoot, destinationPath, sourcePath);
            if (template.exists()) {
                logger_1.logger.skip(destinationPath);
                return;
            }
            template.apply({}).commit();
            logger_1.logger.create(destinationPath);
        });
    });
}
exports.copyTemplates = copyTemplates;
