"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mrm_core_1 = require("mrm-core");
const KeyValueFile_1 = require("../base/KeyValueFile");
class IniFile extends KeyValueFile_1.KeyValueFile {
    constructor(basePath, filename) {
        super(basePath);
        this.$cdIn();
        this.filePointer = mrm_core_1.ini(filename);
        this.$cdOut();
    }
    onmerge(lifecycle, body) {
        if (lifecycle === 'commit') {
            this.filePointer.set(body.section, Object.assign({}, this.get(body.section), body.values));
            return true;
        }
        if (lifecycle === 'rollback') {
            const resetObject = Object.keys(body.values).reduce((result, key) => {
                result[key] = undefined;
                return result;
            }, {});
            this.filePointer.set(body.section, Object.assign({}, this.get(body.section), resetObject));
            return true;
        }
    }
    merge(section, values) {
        if (typeof (values) !== 'object' || values === null) {
            return this;
        }
        this.$addAction('merge', { section, values });
        return this;
    }
}
exports.IniFile = IniFile;
